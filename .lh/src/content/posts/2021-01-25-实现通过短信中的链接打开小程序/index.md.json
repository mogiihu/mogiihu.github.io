{
    "sourceFile": "src/content/posts/2021-01-25-实现通过短信中的链接打开小程序/index.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1756112976216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1756112976216,
            "name": "Commit-0",
            "content": "---\ntitle: 实现通过短信中的链接打开小程序\npublished: 2021-01-25\ndescription: ''\nimage: ''\ntags: [小程序, 前端, Taro]\ncategory: '小程序'\ndraft: false \nlang: ''\n---\n\n在开发小程序的过程中，我遇到了这样的一个需求，通过短信中的链接打开一个h5，这个h5可以实现点击跳转小程序，或者扫码跳转，并且将链接上的参数填充到小程序界面上。下面来描述一下我的开发步骤及实现方案。\n\n这个需求大部分的功能是基于 h5 页面实现的，所以首先进行对 h5 页面的攻破。样式部分不多说，开始攻破两大功能点。\n\n### 1. 通过点击按钮跳转小程序\n点击按钮跳转即通过链接实现跳转，这里使用了小程序官方 api - [urlscheme.generate](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/url-scheme/urlscheme.generate.html)\n\n在这个api中提到获取 URL Scheme 需要 access_token。\n\naccess_token，是小程序全局唯一后台接口调用凭据。需要通过官方 api - [auth.getAccessToken](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/access-token/auth.getAccessToken.html) 去调取，文档中提示 access_token 有效期是 2个小时，所以我将获取的 access_token 存储在 redis 中，并设定过期时间，避免反复调用造成 access_token 刷新，产生不必要的冲突。\n\n下面是获取 accessToken 的代码实现：\n```js\nconst getAccessToken = (appId, appSecret) => {\n    return new Promise((resolve, reject) => {\n        // 从 redis 中查找是否有 accessToken，如果 accessToken 过期，则获取不到 accessToken\n        getRedisData(appId).then((accessToken) => {\n            if (!!accessToken) {\n                // 有 accessToken 则直接返回\n                resolve(accessToken);\n            } else {\n                // 没有则通过接口重新获取 accessToken\n                request({\n                    url: `https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=${appId}&secret=${appSecret}`,\n                    method: 'GET',\n                    timeout: 5000\n                }, (err, response, body) => {\n                    body = JSON.parse(body);\n                    if (err || !body) reject({errCode: -10, errInfo: err.toString()});\n                    if (body.access_token) {\n                        let accessToken = body.access_token;\n                        // 获取后将 accessToken 存储在 redis 中，并设定过期时间，如果过期，则获取不到 accessToken\n                        setRedisDataEx(appId, accessToken, body.expires_in);\n                        resolve(accessToken);\n                    } else {\n                        reject({errCode: body.errcode, errInfo: body.errmsg});\n                    }\n                });\n            }\n        });\n    });\n}\n```\n\n下面是获取 URL Scheme 代码实现：\n```js\nconst getGenerateScheme = (req, res) => {\n    let { tenantCode, ...rest } = req.body;\n    // rest 为文档中的剩余参数\n    let cfg = config[tenantCode]; // cfg中 存储了小程序的 appId 及 appSecret\n    if (!cfg) return res.send(getErrInfo(errCode.ERR_PARAMETER_UNAVAILABLE, 'tenantCode'))\n    \n    let { appId, appSecret } = cfg\n    getAccessToken(appId, appSecret).then((accessToken) => { // 获取 accessToken\n        const params = {\n            ...rest\n        }\n        request({\n            url: `https://api.weixin.qq.com/wxa/generatescheme?access_token=${accessToken}`,\n            method: 'POST',\n            timeout: 5000,\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(params)\n        }, (err, response, body) => {\n            body = JSON.parse(body);\n            if (err || !body) return res.send({errCode: -10, errInfo: err.toString()});\n            if (body.openlink) {\n                // 获取跳转链接 openlink\n                let openlink = body.openlink;\n                return res.send({errCode: 0, result: openlink});\n            } else {\n                return res.send({errCode: body.errcode, errInfo: body.errmsg});\n            }\n        });\n    }).catch((err) => {\n        return res.send(err);\n    });\n}\n```\n上述代码中 `rest`，即为文档中的参数。\n\n调用 `getGenerateScheme` 接口后即可获得 URL Scheme，如：`weixin://dl/business/?t=LcoXo1wSXIq`。\n\niOS系统支持识别URL Scheme，可在短信等应用场景中直接通过Scheme跳转小程序。\nAndroid系统不支持直接识别URL Scheme，用户无法通过Scheme正常打开小程序，我们需要使用H5页面中转，再跳转到Scheme实现打开小程序，跳转代码示例如下：\n\n`location.href = 'weixin://dl/business/?t=LcoXo1wSXIq`\n该跳转方法可以在打开H5时立即调用，也可以在用户触发事件后调用。\n\n### 2. 通过生成的二维码图片扫码跳转小程序\n生成二维码需要用到官方 api - [wxacode.getUnlimited](https://developers.weixin.qq.com/miniprogram/dev/api-backend/open-api/qr-code/wxacode.getUnlimited.html)。\n下面是获取带参小程序二维码图片代码：\n```js\nconst getWxaCode = (req, res) => {\n    let { tenantCode, ...rest } = req.body;\n    // rest 为文档中的剩余参数\n    let cfg = config[tenantCode];\n    if (!cfg) return res.send(getErrInfo(errCode.ERR_PARAMETER_UNAVAILABLE, 'tenantCode'))\n    \n    let { appId, appSecret } = cfg; // cfg中 存储了小程序的 appId 及 appSecret\n    getAccessToken(appId, appSecret).then((accessToken) => { // 获取 accessToken\n        const params = {\n            ...rest\n        }\n        request({\n            url: `https://api.weixin.qq.com/wxa/getwxacodeunlimit?access_token=${accessToken}`,\n            method: 'POST',\n            timeout: 5000,\n            headers: {\n                'content-type': 'image/jpeg',\n            },\n            encoding: null,\n            body: JSON.stringify(params)\n        }, (err, response, body) => {\n            if (err || !body) return res.send({errCode: -10, errInfo: err.toString()});\n            if (body) {\n                const type = response.headers['content-type'];\n                const img = `data:${type};base64,${body.toString('base64')}`;\n                return res.send({errCode: 0, result: img});\n            }\n        });\n    }).catch((err) => {\n        return res.send(err);\n    });\n    \n}\n```\n这里返回的 `body` 是 图片 Buffer 文件，Buffer是一个像Array的对象，但它主要用于操作字节，也就是二进制数据，它的元素为16进制的两位数，即0到255的数值。\n\nrequest 发送请求的编码格式 encoding，会默认为 UTF-8，而对于不能识别的byte串会解码成�，通过将encoding设为null，也就不对原始数据编码，保持原始的二进制图片数据，即可得到 Buffer 文件的正确格式。\n\n获取到 Buffer 文件后我又将其转换成 base64 的格式，以便前端直接使用。\n\n至此这个 h5 的功能基本完成点击 [链接](https://service-support-test.ikandy.cn/h5/#/shareMiniapp?fullName=120&tenantCode=common_tenant&query=phone%3D17770542880&page=pages/videoSuccess/index\n) 看看效果吧！如果如要通过短信发送打开，那么将长链接转换成短链接通过短信发送出去即可。\n\n### 3. 接收跳转参数\n通过接口获取的链接及二维码，在跳转时会将其余参数转换成页面 ? 后面的部分，形如 `page='pages/index/index?foo=bar'`。我们可以在小程序的 App.onLaunch、App.onShow 和 Page.onLoad 的回调函数中获取到。\n\n\n"
        }
    ]
}